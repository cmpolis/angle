// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Angle.ChartBase = (function() {
    ChartBase.prototype.padding = {
      top: 40,
      right: 40,
      bottom: 40,
      left: 40
    };

    ChartBase.prototype.height = 600;

    ChartBase.prototype.width = 600;

    /*
    */


    function ChartBase(options) {
      var elHeight, elWidth;
      if (options == null) {
        options = {};
      }
      this.render = __bind(this.render, this);
      if (!(options.el && (this.el = d3.select(options.el)[0]))) {
        throw "DOM Element not found, pass in a valid selector as `el`";
      }
      this.svg = this.el.append('svg');
      if (Angle.settings.padding != null) {
        _.extend(this.padding, Angle.settings.padding);
      }
      if (options.padding != null) {
        _.extend(this.padding, options);
      }
      if (options.height) {
        this.height = options.height;
      } else if ((elHeight = parseInt(d3.select('#ohlc').style('height'))) > 0) {
        this.height = elHeight;
      } else if (Angle.settings.height) {
        this.height = Angle.settings.height;
      }
      if (options.width) {
        this.width = options.height;
      } else if ((elWidth = parseInt(d3.select('#ohlc').style('width'))) > 0) {
        this.width = elWidth;
      } else if (Angle.settings.width) {
        this.width = Angle.settings.height;
      }
      if (this.initialize != null) {
        this.initialize(options);
      }
    }

    /*
    */


    ChartBase.prototype.render = function() {
      throw "render() not implemented";
    };

    return ChartBase;

  })();

}).call(this);
